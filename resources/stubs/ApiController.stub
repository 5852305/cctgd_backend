<?php

namespace App\Http\Controllers\Api;

use App\Http\Requests\{{modelName}}Request;
use App\Http\Requests\Request;
use App\Services\{{modelName}}Services;
use App\Models\{{modelName}};
use App\Http\Controllers\Controller;
class {{modelName}}Controller extends Controller
{
    protected ${{modelNameSingularLowerCase}};
    protected ${{modelNameSingularLowerCase}}Services;
    public function __construct({{modelName}} ${{modelNameSingularLowerCase}},{{modelName}}Services ${{modelNameSingularLowerCase}}Services)
    {
        $this->{{modelNameSingularLowerCase}}= ${{modelNameSingularLowerCase}};
           $this->{{modelNameSingularLowerCase}}Services= ${{modelNameSingularLowerCase}}Services;
    }
    //{{modelTitle}}列表
    public function index(Request $request)
    {
       $limit = $request->get("limit");
        ${{modelNamePluralLowerCase}} =  $this->{{modelNameSingularLowerCase}}->latest()->paginate($limit);
        return success("暂时没有{{modelTitle}}数据",${{modelNamePluralLowerCase}});
    }
    //{{modelTitle}}添加
    public function store({{modelName}}Request $request)
    {
        ${{modelNamePluralLowerCase}}=$this->{{modelNameSingularLowerCase}}->create($request->all());
        return ${{modelNamePluralLowerCase}} ? success("添加成功") : error("添加失败");
    }

  //{{modelTitle}}修改
    public function update({{modelName}}Request $request,  {{modelName}} ${{modelNameSingularLowerCase}})
    {
       ${{modelNamePluralLowerCase}} =  ${{modelNameSingularLowerCase}}->update($request->all());
      return ${{modelNamePluralLowerCase}} ? success("修改成功", ${{modelNamePluralLowerCase}}) : error("修改失败");
    }
   //{{modelTitle}}删除
    public function destroy({{modelName}}Request $request,$id)
    {
         $del=$this->{{modelNameSingularLowerCase}}->whereIn('id',explode(",",$id))->delete();
         return $del ? success("删除成功") : error("删除失败");
    }
}
